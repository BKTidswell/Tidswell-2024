---
title: "Results Text"
format: html
editor: visual
---

## Loading in the Libraries for Everything

```{r}
library(marginaleffects)
library(tidyverse)
library(ggplot2)
library(bbmle) #For ICtab
library(car)
library(ggpubr)
library(ggdist)
library(emmeans)
library(lme4)
library(sjPlot)
```

## Functions and Variables

```{r}
rad2deg <- function(rad) {(rad * 180) / (pi)}
deg2rad <- function(deg) {(deg * pi) / (180)}
round_any <- function(x, accuracy, f=round){f(x/ accuracy) * accuracy}

deg_ang_mean <- function(x){rad2deg(atan2(mean(sin(deg2rad(x))),mean(cos(deg2rad(x)))))}
rad_ang_mean <- function(x){atan2(mean(sin(x)),mean(cos(x)))}

fold_angle_0_360_to_0_180 <- function(x){abs(abs(x-180)-180)}

fold_angle_neg_180_180_to_neg_90_90 <- function(x){ifelse(x > 90,90-abs(90-x),ifelse(x < -90, -90+abs(-90-x), x))}

min_n <- function(x,n){sort(x)[1:n]}
max_n <- function(x,n){sort(x,decreasing = TRUE)[1:n]}

light_no_ab_color = "#9C9C9C"   #"#C62E65" #A1BAA4" #"#d4d7dd" 06D6A0
light_ab_color = "#f5ba9e"
dark_no_ab_color = "#5e94d4"
dark_ab_color = "#49A078"   #"#1E4371"
sim_color = "#777777"

flow_split_still = "#F59DE2"
flow_split_flow = "#5DD492"

dark_split_light = "#5e94d4"
dark_split_dark = "#011627"

tailbeat_len = 19

allowed_flow_type = c("Still Water","Flowing Water (2 BL/s)")

dot_binwidth = 0.03

text_size = 16

# for turning data
x_offset <- 1.95
y_offset <- 1.15
```

## School Summary Stats

```{r}
school_data <- read.csv("Data/Fish_School_Values_3D.csv")
school_data <- na.omit(school_data)

school_data <- school_data %>% mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           filter(School_Speed <= 5) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water","Flowing Water (2 BL/s)"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep="/n"))) %>%
                            
                           # ### Used to remove every third point to reduce autocorrelation
                           mutate(Date = paste(Year,Month,Day,sep="_"),
                                  Date_Trial = paste(Year,Month,Day,Trial,sep="_")) %>%
                           group_by(Date_Trial) %>%
                           filter(row_number() %% 3 == 1) %>%
                           ungroup()
```

```{r}
still_school <- school_data %>% filter(Flow == "Still Water")

nnd_lmer_still <- lmer(NND ~ Ablation*Darkness + Trial + (1|Date), data = still_school)
nnd_s_aov_me <- Anova(nnd_lmer_still, type=c("III"))

m1 <- lmer(NND ~ Ablation*Darkness + (1|Date), data = still_school)
m2 <- lmer(NND ~ Ablation*Darkness + Trial + (1|Date), data = still_school)
m3 <- lmer(NND ~ Ablation*Darkness + Trial + (0 + Trial|Date), data = still_school)
m4 <- lmer(NND ~ Ablation*Darkness + Trial+ (0 + Trial|Date) + (1|Date), data = still_school)
m5 <- lmer(NND ~ Ablation*Darkness + (1|Date/Trial) + (1|Date), data = still_school)

AIC(m1,m2,m3,m4,m5) %>% arrange(AIC)

summary(nnd_lmer_still)
nnd_s_aov_me

Anova(m5, type=c("III"))

emmeans(nnd_lmer_still, specs = pairwise ~ Ablation:Darkness)

NND_pred <- predictions(m3, newdata = datagrid(Ablation = c("No Ablation","Ablated"),
         Darkness = c("Light","Dark"),
         Date = unique(still_school$Date),
         Trial = seq(1:max(still_school$Trial)),
         model = nnd_lmer_still))

ggplot(NND_pred, aes(x = Trial, y = estimate, color = Date))+
  geom_line()+
  geom_point(data = still_school, aes(x = Trial, y = NND, color = Date))+
  facet_wrap(~ Ablation+Darkness)+
  theme_light()
```


### School Stats Table Here

```{r}

nnd_lmer_still <- lmer(NND ~ Ablation*Darkness + Trial + (1|Date), data = school_data %>% filter(Flow == "Still Water"))
nnd_s_aov_me <- Anova(nnd_lmer_still, type=c("III"))
nnd_s_aov_me

plot(nnd_lmer_still)
qqnorm(resid(nnd_lmer_still))
qqline(resid(nnd_lmer_still))

nnd_lmer_flow <- lmer(NND ~ Ablation*Darkness + Trial + (1|Date), data = school_data %>% filter(Flow == "Flowing Water (2 BL/s)"))
nnd_f_aov_me <- Anova(nnd_lmer_flow, type=c("III"))

plot(nnd_lmer_flow)
qqnorm(resid(nnd_lmer_flow))
qqline(resid(nnd_lmer_flow))

polar_lmer_still <- lmer(School_Polar ~ Ablation*Darkness + Trial + (1|Date), data = school_data %>% filter(Flow == "Still Water"))
polar_s_aov_me <- Anova(polar_lmer_still, type=c("III"))

plot(polar_lmer_still)
qqnorm(resid(polar_lmer_still))
qqline(resid(polar_lmer_still))

polar_lmer_flow <- lmer(School_Polar ~ Ablation*Darkness + Trial + (1|Date), data = school_data %>% filter(Flow == "Flowing Water (2 BL/s)"))
polar_f_aov_me <- Anova(polar_lmer_flow, type=c("III"))

plot(polar_lmer_flow)
qqnorm(resid(polar_lmer_flow))
qqline(resid(polar_lmer_flow))

speed_lmer_still <- lmer(School_Speed ~ Ablation*Darkness + Trial + (1|Date), data = school_data %>% filter(Flow == "Still Water"))
speed_s_aov_me <- Anova(speed_lmer_still, type=c("III"))

plot(speed_lmer_still)
qqnorm(resid(speed_lmer_still))
qqline(resid(speed_lmer_still))

speed_lmer_flow <- lmer(School_Speed ~ Ablation*Darkness + Trial + (1|Date), data = school_data %>% filter(Flow == "Flowing Water (2 BL/s)"))
speed_f_aov_me <- Anova(speed_lmer_flow, type=c("III"))

plot(speed_lmer_flow)
qqnorm(resid(speed_lmer_flow))
qqline(resid(speed_lmer_flow))

groups_lmer_still <- glmer(Groups ~ Ablation*Darkness + Trial + (1|Date), data = school_data %>% filter(Flow == "Still Water"),
                           family = poisson)
groups_s_aov_me <- Anova(groups_lmer_still, type=c("III"))

plot(groups_lmer_still)
qqnorm(resid(groups_lmer_still))
qqline(resid(groups_lmer_still))

groups_lmer_flow <- glmer(Groups ~ Ablation*Darkness + Trial + (1|Date), data = school_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
                           family = poisson)
groups_f_aov_me <- Anova(groups_lmer_flow, type=c("III"))

plot(groups_lmer_flow)
qqnorm(resid(groups_lmer_flow))
qqline(resid(groups_lmer_flow))

values_to_grab <- c(2,3,4,5)

glmm_school_stats_table <- tibble(Stat = c(rep("NND",8),rep("Polarization",8),rep("Speed",8),rep("Groups",8)),
       Flow_or_Still = rep(c(rep("Still",4) , rep("Flow",4)), 4),
       Condition = rep(c("Ablation","Darkness","Trial","Ablation x Darkness"), 8),
       DF = rep(c(rep(length(nnd_lmer_still@resp$y)-3,4),
                  rep(length(nnd_lmer_flow@resp$y)-3,4)),times = 4),
       Chisq = round(c(nnd_s_aov_me$Chisq[values_to_grab],nnd_f_aov_me$Chisq[values_to_grab],
                 polar_s_aov_me$Chisq[values_to_grab],polar_f_aov_me$Chisq[values_to_grab],
                 speed_s_aov_me$Chisq[values_to_grab],speed_f_aov_me$Chisq[values_to_grab],
                 groups_s_aov_me$Chisq[values_to_grab],groups_f_aov_me$Chisq[values_to_grab]),2),
       
       P_Val = round(c(nnd_s_aov_me$`Pr(>Chisq)`[values_to_grab],nnd_f_aov_me$`Pr(>Chisq)`[values_to_grab],
                 polar_s_aov_me$`Pr(>Chisq)`[values_to_grab],polar_f_aov_me$`Pr(>Chisq)`[values_to_grab],
                 speed_s_aov_me$`Pr(>Chisq)`[values_to_grab],speed_f_aov_me$`Pr(>Chisq)`[values_to_grab],
                 groups_s_aov_me$`Pr(>Chisq)`[values_to_grab],groups_f_aov_me$`Pr(>Chisq)`[values_to_grab]),2),
       
       Is_Sig = P_Val < 0.05)

glmm_school_stats_table

tab_df(glmm_school_stats_table, file="sjt_des.doc")
```

### Turning Results Text

```{r}

fish_comp_data <- read.csv("Data/Fish_Comp_Values_3D.csv") %>%
                           mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation  == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water","Flowing Water (2 BL/s)"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep=", "))) %>%
                           separate(Fish, c("Fish1", "Fish2"),sep="x") %>% 
                           mutate(Data_ID = paste(Year,Month,Day,Trial, sep = "_"),
                                  Date = paste(Year,Month,Day,Trial, sep = "_"),
                                  Fish_ID = paste(Year,Month,Day,Trial,Fish1, sep = "_"),
                                  Comp_ID = paste(Year,Month,Day,Trial,Fish1,Fish2, sep = "_"))
                           

min_x <- floor(min(fish_comp_data$Fish1_X, na.rm = T)) + x_offset
max_x <- ceiling(max(fish_comp_data$Fish1_X, na.rm = T)) - x_offset
min_y <- floor(min(fish_comp_data$Fish1_Y, na.rm = T)) + y_offset
max_y <- ceiling(max(fish_comp_data$Fish1_Y, na.rm = T)) - y_offset

print(paste(min_x,max_x,min_y,max_y))

min_dist <- 0
middle_dist <- 2.5
max_dist <- 100

#Limit away from the edge
fish_comp_data <- fish_comp_data %>% filter(Fish1_X >= min_x & Fish1_X <= max_x) %>%
                                     filter(Fish1_Y >= min_y & Fish1_Y <= max_y)

#close
fish_comp_data_ring_angles <- fish_comp_data %>% filter(Distance >= min_dist & Distance <= max_dist) %>%
                                                 mutate(Dist_Cat = ifelse(Distance <= middle_dist, "Close", "Far"))

fish_data_nn_normal <- fish_comp_data_ring_angles %>% group_by(Flow_Ablation_Darkness) %>%
                                        mutate(Fish1_Yaw_Heading_PS = Fish1_Yaw_Heading_PS - mean(Fish1_Yaw_Heading_PS, na.rm = T)) %>%
                                        ungroup() %>% 
                                        filter(Flow == "Still Water")


nn_heading_sum <- fish_data_nn_normal %>% mutate(angle_bins = round_any(Angle,pi/6)) %>%
                                                group_by(angle_bins,Flow,Ablation,Darkness,Flow_Ablation_Darkness,Dist_Cat) %>%
                                                summarise(mean_turn = mean(Fish1_Yaw_Heading_PS, na.rm = T),
                                                          sd_turn = sd(Fish1_Yaw_Heading_PS, na.rm = T),
                                                          n = n()) %>%
                                                ungroup() 

```


```{r}

perp_angle_df <- fish_data_nn_normal %>% filter(Angle >= deg2rad(75) & Angle <= deg2rad(105))

perp_angle_df_neg <- fish_data_nn_normal %>% filter(Angle >= deg2rad(-105) & Angle <= deg2rad(-75)) %>% 
                                                   mutate(Fish1_Yaw_Heading_PS = -1*Fish1_Yaw_Heading_PS)

perp_angle_df <- rbind(perp_angle_df,perp_angle_df_neg)

perp_angle_df <- perp_angle_df %>% group_by(Flow,Ablation,Darkness,Flow_Ablation_Darkness,Dist_Cat) %>%
                                                mutate(mean_turn = mean(Fish1_Yaw_Heading_PS, na.rm = T),
                                                       sd_turn = sd(Fish1_Yaw_Heading_PS, na.rm = T),
                                                       n = n()) %>%
                                                ungroup()

perp_angle_lmer_close <- lmer(Fish1_Yaw_Heading_PS ~ Ablation*Darkness + Trial + (1|Date), data = perp_angle_df %>% filter(Dist_Cat == "Close"))
perp_angle_aov_me_close <- Anova(perp_angle_lmer_close)

plot(perp_angle_lmer_close)
qqnorm(resid(perp_angle_lmer_close))
qqline(resid(perp_angle_lmer_close))

perp_angle_lmer_far <- lmer(Fish1_Yaw_Heading_PS ~ Ablation*Darkness + Trial + (1|Date), data = perp_angle_df %>% filter(Dist_Cat == "Far"))
perp_angle_aov_me_far <- Anova(perp_angle_lmer_far)

plot(perp_angle_lmer_far)
qqnorm(resid(perp_angle_lmer_far))
qqline(resid(perp_angle_lmer_far))

shapiro.test(resid(perp_angle_lmer_far))

turning_school_stats_table <- tibble(
       Near_or_Far = rep(c(rep("Near",4) , rep("Far",4)), 1),
       Condition = rep(c("Ablation","Darkness","Trial","Ablation x Darkness"), 2),
       DF = c(rep(length(perp_angle_lmer_close@resp$y)-3,4),
                  rep(length(perp_angle_lmer_far@resp$y)-3,4)),
       Chisq = round(c(perp_angle_aov_me_close$Chisq[1:4],perp_angle_aov_me_far$Chisq[1:4]),2),
       P_Val = round(c(perp_angle_aov_me_close$`Pr(>Chisq)`[1:4],perp_angle_aov_me_far$`Pr(>Chisq)`[1:4]),2),
       Is_Sig = P_Val < 0.05)

turning_school_stats_table

tab_df(turning_school_stats_table, file="turning_stats.doc")
```

