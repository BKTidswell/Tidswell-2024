---
title: "Paper Figures and Text"
format: html
editor: visual
---

## Loading in the Libraries for Everything

```{r}
library(tidyverse)
library(ggplot2)
library(bbmle) #For ICtab
library(car)
library(ggpubr)
library(ggdist)
library(emmeans)
library(lme4)

```


## Functions and Variables

```{r}
rad2deg <- function(rad) {(rad * 180) / (pi)}
deg2rad <- function(deg) {(deg * pi) / (180)}
round_any <- function(x, accuracy, f=round){f(x/ accuracy) * accuracy}

deg_ang_mean <- function(x){rad2deg(atan2(mean(sin(deg2rad(x))),mean(cos(deg2rad(x)))))}
rad_ang_mean <- function(x){atan2(mean(sin(x)),mean(cos(x)))}

fold_angle_0_360_to_0_180 <- function(x){abs(abs(x-180)-180)}

fold_angle_neg_180_180_to_neg_90_90 <- function(x){ifelse(x > 90,90-abs(90-x),ifelse(x < -90, -90+abs(-90-x), x))}

min_n <- function(x,n){sort(x)[1:n]}
max_n <- function(x,n){sort(x,decreasing = TRUE)[1:n]}

light_no_ab_color = "#9C9C9C"   #"#C62E65" #A1BAA4" #"#d4d7dd" 06D6A0
light_ab_color = "#f5ba9e"
dark_no_ab_color = "#5e94d4"
dark_ab_color = "#49A078"   #"#1E4371"
sim_color = "#777777"

flow_split_still = "#F59DE2"
flow_split_flow = "#5DD492"

dark_split_light = "#5e94d4"
dark_split_dark = "#011627"

tailbeat_len = 19

allowed_flow_type = c("Still Water","Flowing Water (2 BL/s)")

dot_binwidth = 0.03

text_size = 16

# for turning data
x_offset <- 1.95
y_offset <- 1.15
```

Heading Velocity graphs

```{r}
fish_comp_data <- read.csv("Data/Fish_Comp_Values_3D.csv") %>%
                           mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation  == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water","Flowing Water (2 BL/s)"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep=", "))) %>%
                           separate(Fish, c("Fish1", "Fish2"),sep="x") %>% 
                           mutate(Data_ID = paste(Year,Month,Day,Trial, sep = "_"),
                                  Date = paste(Year,Month,Day,Trial, sep = "_"),
                                  Fish_ID = paste(Year,Month,Day,Trial,Fish1, sep = "_"),
                                  Comp_ID = paste(Year,Month,Day,Trial,Fish1,Fish2, sep = "_"))
                           

min_x <- floor(min(fish_comp_data$Fish1_X, na.rm = T)) + x_offset
max_x <- ceiling(max(fish_comp_data$Fish1_X, na.rm = T)) - x_offset
min_y <- floor(min(fish_comp_data$Fish1_Y, na.rm = T)) + y_offset
max_y <- ceiling(max(fish_comp_data$Fish1_Y, na.rm = T)) - y_offset

print(paste(min_x,max_x,min_y,max_y))

min_dist <- 0
middle_dist <- 2.5
max_dist <- 100

#Limit away from the edge
fish_comp_data <- fish_comp_data %>% filter(Fish1_X >= min_x & Fish1_X <= max_x) %>%
                                     filter(Fish1_Y >= min_y & Fish1_Y <= max_y)

#close
fish_comp_data_ring_angles <- fish_comp_data %>% filter(Distance >= min_dist & Distance <= max_dist) %>%
                                                 mutate(Dist_Cat = ifelse(Distance <= middle_dist, "Close", "Far"))

fish_data_nn_normal <- fish_comp_data_ring_angles %>% group_by(Flow_Ablation_Darkness) %>%
                                        mutate(Fish1_Yaw_Heading_PS = Fish1_Yaw_Heading_PS - mean(Fish1_Yaw_Heading_PS, na.rm = T)) %>%
                                        ungroup() %>% 
                                        filter(Flow == "Still Water")


nn_heading_sum <- fish_data_nn_normal %>% mutate(angle_bins = round_any(Angle,pi/6)) %>%
                                                group_by(angle_bins,Flow,Ablation,Darkness,Flow_Ablation_Darkness,Dist_Cat) %>%
                                                summarise(mean_turn = mean(Fish1_Yaw_Heading_PS, na.rm = T),
                                                          sd_turn = sd(Fish1_Yaw_Heading_PS, na.rm = T),
                                                          n = n()) %>%
                                                ungroup() 
```

Model and Graph

```{r}

perp_angle_df <- fish_data_nn_normal %>% filter(Angle >= deg2rad(75) & Angle <= deg2rad(105))

perp_angle_df_neg <- fish_data_nn_normal %>% filter(Angle >= deg2rad(-105) & Angle <= deg2rad(-75)) %>% 
                                                   mutate(Fish1_Yaw_Heading_PS = -1*Fish1_Yaw_Heading_PS)

perp_angle_df <- rbind(perp_angle_df,perp_angle_df_neg)

perp_angle_df <- perp_angle_df %>% group_by(Flow,Ablation,Darkness,Flow_Ablation_Darkness,Dist_Cat) %>%
                                                mutate(mean_turn = mean(Fish1_Yaw_Heading_PS, na.rm = T),
                                                       sd_turn = sd(Fish1_Yaw_Heading_PS, na.rm = T),
                                                       n = n()) %>%
                                                ungroup()

perp_angle_lm_close <- lm(Fish1_Yaw_Heading_PS ~ Ablation*Darkness, data = perp_angle_df %>% filter(Dist_Cat == "Close"))
Anova(perp_angle_lm_close)
emmeans(perp_angle_lm_close, specs = pairwise ~ Ablation:Darkness)

my_comparisons <- list(c("No Ablation, Light", "Ablated, Dark"),
                       c("No Ablation, Dark", "Ablated, Dark"))

heading_PS_graph_close <- ggplot(perp_angle_df %>% filter(Dist_Cat == "Close"),
                                 aes(x = interaction(Ablation, Darkness, sep =", "), y = rad2deg(Fish1_Yaw_Heading_PS),
                          fill = interaction(Ablation, Darkness, sep =", "), color = interaction(Ablation, Darkness, sep =", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth*0.375, "npc")) +
  geom_point(aes(y = rad2deg(mean_turn)), size = 5, color = "black") +
  geom_line(aes(y = rad2deg(mean_turn), group = 1), size = 1, color = "black") +
  geom_errorbar(aes(ymin=rad2deg(mean_turn-sd_turn), ymax=rad2deg(mean_turn+sd_turn)), width=.2, color = "black")+
  theme_light()+
  scale_fill_manual(values = c(light_no_ab_color,light_ab_color,dark_no_ab_color,dark_ab_color)) +
  scale_color_manual(values = c(light_no_ab_color,light_ab_color,dark_no_ab_color,dark_ab_color)) +
  theme(legend.position = "none")+
  xlab("")+
  ylab("Focal Fish Turning Angular Speed (Degrees / s)")+
  scale_y_continuous(breaks = seq(-180,180, 60))+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})


perp_angle_lm_far <- lm(Fish1_Yaw_Heading_PS ~ Ablation*Darkness, data = perp_angle_df %>% filter(Dist_Cat == "Far"))
Anova(perp_angle_lm_far)
emmeans(perp_angle_lm_far, specs = pairwise ~ Ablation:Darkness)

my_comparisons <- list(c("No Ablation, Light", "No Ablation, Dark"),
                       c("No Ablation, Light", "Ablated, Dark"))

heading_PS_graph_far <- ggplot(perp_angle_df %>% filter(Dist_Cat == "Far"),
                                 aes(x = interaction(Ablation, Darkness, sep =", "), y = rad2deg(Fish1_Yaw_Heading_PS),
                          fill = interaction(Ablation, Darkness, sep =", "), color = interaction(Ablation, Darkness, sep =", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth*0.375, "npc")) +
  geom_point(aes(y = rad2deg(mean_turn)), size = 5, color = "black") +
   geom_line(aes(y = rad2deg(mean_turn), group = 1), size = 1, color = "black") +
  geom_errorbar(aes(ymin=rad2deg(mean_turn-sd_turn), ymax=rad2deg(mean_turn+sd_turn)), width=.2, color = "black")+
  theme_light()+
  scale_fill_manual(values = c(light_no_ab_color,light_ab_color,dark_no_ab_color,dark_ab_color)) +
  scale_color_manual(values = c(light_no_ab_color,light_ab_color,dark_no_ab_color,dark_ab_color)) +
  theme(legend.position = "none")+
  xlab("")+
  ylab("Focal Fish Turning Angular Speed (Degrees / s)")+
  scale_y_continuous(breaks = seq(-180,180, 60))+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})


heading_PS_graph_close
heading_PS_graph_far

heading_PS_mega_plot <- ggarrange(heading_PS_graph_close, heading_PS_graph_far, 
          labels = c("A", "B"),
          ncol = 2, nrow = 1)  

heading_PS_mega_plot

heading_PS_mega_plot <- annotate_figure(heading_PS_mega_plot, 
                top = text_grob("  Near (< 2.5 BL)                                                Far (> 2.5 BL)",
                                size = 24))

ggsave("Paper Figures/heading_PS_mega_plot.png", heading_PS_mega_plot, width = 14, height = 7)

```


## School Summary Stats

```{r}
school_data <- read.csv("Data/Fish_School_Values_3D.csv")

#school_data <- na.omit(school_data)

school_data <- school_data %>% mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           filter(School_Speed <= 5) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water","Flowing Water (2 BL/s)"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep="/n"))) %>%
                            
                           # ### Used to remove every third point to reduce autocorrelation
                           mutate(Date = paste(Year,Month,Day,sep="_"),
                                  Date_Trial = paste(Year,Month,Day,Trial,sep="_")) %>%
                           group_by(Date_Trial) %>%
                           filter(row_number() %% 3 == 1) %>%
                           ungroup() %>%
                           # ###
                          
                           group_by(Flow_Ablation_Darkness) %>%
                           mutate(NND_Mean_Val = mean(NND,na.rm = T), NND_SD_Val = sd(NND,na.rm = T),
                                  Polar_Mean_Val = mean(School_Polar,na.rm = T), Polar_SD_Val = sd(School_Polar,na.rm = T),
                                  Speed_Mean_Val = mean(School_Speed,na.rm = T), Speed_SD_Val = sd(School_Speed,na.rm = T),
                                  Area_Mean_Val = mean(Area,na.rm = T), Area_SD_Val = sd(Area,na.rm = T),
                                  Groups_Mean_Val = mean(Groups,na.rm = T), Groups_SD_Val = sd(Groups,na.rm = T),
                                  Mean_Groups_Mean_Val = mean(Mean_Groups,na.rm = T), Mean_Groups_SD_Val = sd(Mean_Groups,na.rm = T),
                                  Height_Mean_Val = mean(School_Height,na.rm = T), Height_SD_Val = sd(School_Height,na.rm = T)) %>%
                           ungroup()
```



### NND Plot

```{r}

my_comparisons <- list(c("No Ablation, Light", "No Ablation, Dark"),
                       c("No Ablation, Light", "Ablated, Dark"),
                       c("Ablated, Light", "No Ablation, Dark"),
                       c("Ablated, Light", "Ablated, Dark"))

nnd_still <- ggplot(school_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = NND,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = NND_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=NND_Mean_Val-NND_SD_Val, ymax=NND_Mean_Val+NND_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  #ggtitle("Effect of Available Senses on Nearest Neighbor Distance (NND) in Still Water") +
  xlab("") +
  ylab("School NND (BL)") +
  theme_light()+ 
  theme(legend.position = "none") +
  #ylim(0,2.5)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

my_comparisons <- list(c("Ablated, Light", "No Ablation, Dark"))

nnd_flow <- ggplot(school_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = NND,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = NND_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=NND_Mean_Val-NND_SD_Val, ymax=NND_Mean_Val+NND_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  #ggtitle("Effect of Available Senses on Nearest Neighbor Distance (NND) in Flow (2 BL/s)") +
  xlab("") +
  ylab("School NND (BL)") +
  theme_light()+ 
  theme(legend.position = "none") +
  #ylim(0,5)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

nnd_still
nnd_flow

nnd_glm <- glm(NND ~ Ablation*Darkness*Flow, data = school_data)
Anova(nnd_glm)
emmeans(nnd_glm, specs = pairwise ~ Ablation:Darkness | Flow)

```

### Polarization

```{r}

my_comparisons <- list()

polar_still <- ggplot(school_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Polar,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Polar_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Polar_Mean_Val-Polar_SD_Val, ymax=Polar_Mean_Val+Polar_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  #ggtitle("Effect of Available Senses on Polarization in Still Water") +
  xlab("") +
  ylab("Polarization") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,1)+
  scale_y_continuous(breaks = c(0,0.25,0.5,0.75,1))+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

my_comparisons <- list()

polar_flow <- ggplot(school_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Polar,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Polar_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Polar_Mean_Val-Polar_SD_Val, ymax=Polar_Mean_Val+Polar_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  #ggtitle("Effect of Available Senses on Polarization in Flowing Water (2 BL/s)") +
  xlab("") +
  ylab("Polarization") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,1)+
  scale_y_continuous(breaks = c(0,0.25,0.5,0.75,1))+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

polar_still
polar_flow

polar_glm <- glm(School_Polar ~ Ablation*Darkness*Flow, data = school_data)
Anova(polar_glm)
emmeans(polar_glm, specs = pairwise ~ Ablation:Darkness | Flow)
```

### Speed

```{r}
my_comparisons <- list()

speed_still <- ggplot(school_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Speed,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Speed_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=max(Speed_Mean_Val-Speed_SD_Val,0), ymax=Speed_Mean_Val+Speed_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  #ggtitle("Effect of Available Senses on Speed (BL/s) in Still Water") +
  xlab("") +
  ylab("Mean Speed of Fish (BL/s)") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,6)+
  stat_compare_means(comparisons = my_comparisons, label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

my_comparisons <- list()

speed_flow <- ggplot(school_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "), y = School_Speed,
           color = interaction(Ablation,Darkness,sep=", "),
           fill = interaction(Ablation,Darkness,sep=", ")))+
  stat_dots(side = "both", binwidth = unit(dot_binwidth, "npc")) +
  geom_point(aes(y = Speed_Mean_Val), size = 5, color = "Black") +
  geom_errorbar(aes(ymin=Speed_Mean_Val-Speed_SD_Val, ymax=Speed_Mean_Val+Speed_SD_Val), width=.2, color = "Black")+
  guides(fill = guide_legend(title = "Condition")) +
  scale_fill_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  scale_color_manual(values=c(light_no_ab_color, light_ab_color, dark_no_ab_color, dark_ab_color)) +
  #ggtitle("Effect of Available Senses on Speed (BL/s) in Flowing Water (2 BL/s)") +
  xlab("") +
  ylab("Mean Speed of Fish (BL/s)") +
  theme_light()+ 
  theme(legend.position = "none") +
  ylim(0,6)+
  stat_compare_means(comparisons = my_comparisons, label.y = c(5.5), label = "p.signif", hide.ns = TRUE) +
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

speed_still
speed_flow

speed_glm <- glm(School_Speed ~ Ablation*Darkness*Flow, data = school_data)
Anova(speed_glm)
emmeans(speed_glm, specs = pairwise ~ Ablation:Darkness | Flow)
```

### Number of Groups

```{r}
group_sum_data <- school_data %>% filter(Groups > 0) %>% group_by(Flow, Ablation, Darkness, Groups) %>%
                            summarise(count = n()) %>%
                            ungroup() %>%
                            mutate(Groups = as.factor(Groups),
                                   Groups = fct_rev(Groups))

group_still <- ggplot(group_sum_data %>% filter(Flow == "Still Water"),
       aes(x = interaction(Ablation,Darkness,sep=", "),
           y = count,
           fill = Groups)) + 
    geom_bar(position="fill", stat="identity")+
    xlab("") +
    ylab("Proportion of Time") +
    theme_light()+ 
    scale_fill_manual(values=c("8" = "#1D3557","7" = "#325A7C","6" = "#457B9D","5" = "#7BAFBF",
                               "4" = "#A8DADC","3" = "#D0EBE6","2" = "#F1FAEE","1" = "#3ae639")) +
    theme(axis.text.x = element_text(size = text_size),
          axis.text.y = element_text(size = text_size),
          axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})

group_flow <- ggplot(group_sum_data %>% filter(Flow == "Flowing Water (2 BL/s)"),
       aes(x = interaction(Ablation,Darkness,sep=", "),
           y = count,
           fill = Groups)) + 
    geom_bar(position="fill", stat="identity")+
    xlab("") +
    ylab("Proportion of Time") +
    theme_light()+ 
    scale_fill_manual(values=c("8" = "#1D3557","7" = "#325A7C","6" = "#457B9D","5" = "#7BAFBF",
                               "4" = "#A8DADC","3" = "#D0EBE6","2" = "#F1FAEE","1" = "#3ae639")) +
    theme(axis.text.x = element_text(size = text_size),
          axis.text.y = element_text(size = text_size),
          axis.title.y = element_text(size = text_size))+
  scale_x_discrete(labels=function(x){sub(",\\s", "\n", x)})


group_still
group_flow

groups_glm <- glm(Groups ~ Ablation*Darkness*Flow, data = school_data, family  = poisson)
Anova(groups_glm)
emmeans(groups_glm, specs = pairwise ~ Ablation:Darkness | Flow)

groups_glm_still <- glm(Groups ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Still Water"), family  = poisson)
Anova(groups_glm_still, test.statistic="F")

groups_glm_flow <- glm(Groups ~ Ablation*Darkness, data = school_data %>% filter(Flow == "Flowing Water (2 BL/s)"), family  = poisson)
Anova(groups_glm_flow, test.statistic="F")

```

### Now we combine them

```{r}
school_stats_mega_plot <- ggarrange(nnd_still, nnd_flow, 
                                    polar_still, polar_flow,
                                    speed_still, speed_flow,
                                    group_still, group_flow,
          labels = c("A", "B", "C", "D", "E", "F", "G", "H"),
          ncol = 2, nrow = 4)  

school_stats_mega_plot

school_stats_mega_plot <- annotate_figure(school_stats_mega_plot, 
                top = text_grob("                 Still Water                                     Flowing Water (2 BL/s)",
                                size = 24),
                fig.lab.pos = "top")

ggsave("Paper Figures/school_stats_mega_plot.png", school_stats_mega_plot, width = 12, height = 17)
```

Autocorrelation Figure

```{r}

school_data_no_removals <- read.csv("Data/Fish_School_Values_3D.csv")
school_data_no_removals <- na.omit(school_data_no_removals)

school_data_no_removals <- school_data_no_removals %>% mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation == "N", "No Ablation", "Ablated")) %>%
                           mutate(Darkness = ifelse(Darkness == "N", "Light", "Dark")) %>%
                           filter(School_Speed <= 5) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water","Flowing Water (2 BL/s)"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("No Ablation","Ablated"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Light","Dark"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep=", "))) %>%
                           mutate(Date = paste(Year,Month,Day,sep="_"),
                                  Date_Trial = paste(Year,Month,Day,Trial,sep="_"),)

for(i in seq(1:5)){
  print(i)
  
  new_autocorrs <- school_data_no_removals %>% group_by(Date_Trial) %>%
                    filter(!Date_Trial %in% c("2021_3_25_30","2020_7_28_29","2021_10_6_34",
                                              "2021_7_7_16","2021_3_25_7","2021_3_25_22",
                                              "2021_8_3_8")) %>%
                    summarise(nnd_corr = abs(cor.test(NND, lag(NND, n = i))$estimate),
                              nnd_p = cor.test(NND, lag(NND, n = i))$p.value,
                              polar_corr = abs(cor.test(School_Polar, lag(School_Polar, n = i))$estimate),
                              polar_p = cor.test(School_Polar, lag(School_Polar, n = i))$p.value,
                              speed_corr = abs(cor.test(School_Speed, lag(School_Speed, n = i))$estimate),
                              speed_p = cor.test(School_Speed, lag(School_Speed, n = i))$p.value,
                              groups_corr = abs(cor.test(Groups, lag(Groups, n = i))$estimate),
                              groups_p = cor.test(Groups, lag(Groups, n = i))$p.value,
                              area_corr = abs(cor.test(Area, lag(Area, n = i))$estimate),
                              area_p = cor.test(Area, lag(Area, n = i))$p.value,
                              height_corr = abs(cor.test(School_Height, lag(School_Height, n = i))$estimate),
                              height_p = cor.test(School_Height, lag(School_Height, n = i))$p.value,
                              lag = i)
  
  if(i == 1){
    school_autocorrs <- new_autocorrs
  }
  else{
    school_autocorrs <- rbind(school_autocorrs,new_autocorrs) 
  }
  
}

nnd_lag_plot <- ggplot(school_autocorrs, aes(as.factor(lag), nnd_corr))+
  stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = 0.25) +
  stat_summary(fun.y=mean, geom="point", size = 3) +
  ylim(0,1)+
  ylab("NND Autocorrelation")+
  xlab("Offset")+
  theme_classic()+ 
  theme(legend.position = "none")

polar_lag_plot <- ggplot(school_autocorrs, aes(as.factor(lag), polar_corr))+
  stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = 0.25) +
  stat_summary(fun.y=mean, geom="point", size = 3) +
  ylim(0,1)+
  ylab("Polarity Autocorrelation")+
  xlab("Offset")+
  theme_classic()+ 
  theme(legend.position = "none")

speed_lag_plot <- ggplot(school_autocorrs, aes(as.factor(lag), speed_corr))+
  stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = 0.25) +
  stat_summary(fun.y=mean, geom="point", size = 3) +
  ylim(0,1)+
  ylab("Speed Autocorrelation")+
  xlab("Offset")+
  theme_classic()+ 
  theme(legend.position = "none")

groups_lag_plot <- ggplot(school_autocorrs, aes(as.factor(lag), groups_corr))+
  stat_summary(fun.data = mean_se, geom = "errorbar", color = "black", width = 0.25) +
  stat_summary(fun.y=mean, geom="point", size = 3) +
  ylim(0,1)+
  ylab("Numebr of Groups Autocorrelation")+
  xlab("Offset")+
  theme_classic()+ 
  theme(legend.position = "none")

lag_plots <- ggarrange(
          nnd_lag_plot, polar_lag_plot, speed_lag_plot, groups_lag_plot,
          ncol = 2, nrow = 2,
          labels = c("A", "B", "C", "D"))

ggsave("Paper Figures/Different_Lag_Figures.png", lag_plots, width = 7, height = 7)

```

Single Fish Figure

```{r}

single_comp_data <- read.csv("Data/Fish_Comp_Values_3D_Single.csv") %>%
                           mutate(Flow = ifelse(Flow == "0", "Still Water", "Flowing Water (2 BL/s)")) %>%
                           mutate(Ablation = ifelse(Ablation  == "S", "Single", "Jingle")) %>%
                           mutate(Darkness = ifelse(Darkness == "S", "Single", "Jingle")) %>%
                           mutate(Flow = factor(Flow), Ablation = factor(Ablation), Darkness = factor(Darkness)) %>%
                           mutate(Flow = fct_relevel(Flow, c("Still Water"))) %>%
                           mutate(Ablation = fct_relevel(Ablation, c("Single"))) %>%
                           mutate(Darkness = fct_relevel(Darkness, c("Single"))) %>%
                           mutate(Flow_Ablation_Darkness = factor(paste(Flow,Ablation,Darkness,sep=", "))) %>%
                           separate(Fish, c("Fish1", "Fish2"),sep="x") %>% 
                           mutate(Type = "Single")


top_edge <- ceiling(max(single_comp_data$Fish1_Y)) - y_offset 
bottom_edge <- floor(min(single_comp_data$Fish1_Y)) + y_offset
left_edge <- floor(min(single_comp_data$Fish1_X)) + x_offset
right_edge <- ceiling(max(single_comp_data$Fish1_X)) - x_offset

single_fish_mean_angles_middle <- single_comp_data %>% filter(Fish1_X >= left_edge & Fish1_X <= right_edge) %>%
                                                filter(Fish1_Y >= bottom_edge & Fish1_Y <= top_edge) %>%
                                                 #normalize
                                                 mutate(Fish1_Yaw_Heading_PS = Fish1_Yaw_Heading_PS - mean(Fish1_Yaw_Heading_PS, na.rm = T))

#Combine -75 to -105 with 75 to 105
single_perp_angle_df_middle <- single_fish_mean_angles_middle %>% filter(Angle >= deg2rad(75) & Angle <= deg2rad(105))
single_perp_angle_df_neg_middle <- single_fish_mean_angles_middle %>% filter(Angle >= deg2rad(-105) & Angle <= deg2rad(-75)) %>%
                                                                 mutate(Fish1_Yaw_Heading_PS = -1*Fish1_Yaw_Heading_PS)
single_perp_angle_df_middle <- rbind(single_perp_angle_df_middle,single_perp_angle_df_neg_middle) %>% mutate(Label = "Edges Removed")


single_fish_mean_angles_all <- single_comp_data %>% mutate(Fish1_Yaw_Heading_PS = Fish1_Yaw_Heading_PS - mean(Fish1_Yaw_Heading_PS, na.rm = T))

single_perp_angle_df_all <- single_fish_mean_angles_all %>% filter(Angle >= deg2rad(75) & Angle <= deg2rad(105))
single_perp_angle_df_neg_all <- single_fish_mean_angles_all %>% filter(Angle >= deg2rad(-105) & Angle <= deg2rad(-75)) %>%
                                                                mutate(Fish1_Yaw_Heading_PS = -1*Fish1_Yaw_Heading_PS)
single_perp_angle_df_all <- rbind(single_perp_angle_df_all,single_perp_angle_df_neg_all) %>% mutate(Label = "All Data")


single_perp_angle_graphing <- rbind(single_perp_angle_df_middle,single_perp_angle_df_all) %>%
                              mutate(Rounded_Turning = round_any(Fish1_Yaw_Heading_PS, pi/6)) %>%
                              group_by(Label) %>%
                              mutate(group_n = n()) %>%
                              ungroup() %>%
                              group_by(Label,Rounded_Turning,group_n) %>%
                              summarise(perc = mean(n()/group_n*100)) %>%
                              ungroup()

t.test(single_perp_angle_df_all$Fish1_Yaw_Heading_PS)
t.test(single_perp_angle_df_middle$Fish1_Yaw_Heading_PS)


single_plot <- ggplot(single_perp_angle_graphing, aes(x = rad2deg(Rounded_Turning), y = perc, fill = Label))+
  #geom_histogram(aes(y=0.5*..density..*100),binwidth=45,position='identity', alpha = 0.5)+
  geom_col(position='identity',alpha = 0.5)+
  theme_classic()+
  scale_fill_manual(values = c("#CE2414","#138EC2"))+
  ylab("Percentage of Values")+
  xlab("Turning Angle Rate (Degrees / s)")+
  xlim(-200,200)+
  theme(axis.text.x = element_text(size = text_size),
        axis.text.y = element_text(size = text_size),
        axis.title.x = element_text(size = text_size),
        axis.title.y = element_text(size = text_size))

single_plot

ggsave("Paper Figures/Edge_Removal_Single_Fish.png", single_plot, width = 7, height = 7)

```

